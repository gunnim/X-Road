#!/bin/bash
. /usr/share/debconf/confmodule

handle_error() {
    ERR=$(</tmp/cert.err)
    db_subst xroad-common/cert-generation-abort ERR "$(printf %s "$ERR" | debconf-escape -e)"
    db_input critical xroad-common/cert-generation-abort
    db_go
    rm -f /tmp/cert.err
}

case "$1" in
    configure)
        mkdir -p  /var/lib/xroad/public
        chmod 755 /var/lib/xroad/public
        chown xroad:xroad /var/lib/xroad/public

        mkdir -p  /etc/xroad/confproxy
        chmod 755 /etc/xroad/confproxy
        chown xroad:xroad /etc/xroad/confproxy

        # replace configuration property signature-algorithm-id with signature-digest-algorithm-id
        local_ini=/etc/xroad/conf.d/local.ini
        if [[ -f ${local_ini} && `crudini --get ${local_ini} configuration-proxy signature-algorithm-id 2>/dev/null` ]]
        then
            signature_algorithm_id=`crudini --get ${local_ini} configuration-proxy signature-algorithm-id`
            crudini --del ${local_ini} configuration-proxy signature-algorithm-id
            case "$signature_algorithm_id" in
                SHA512*) crudini --set ${local_ini} configuration-proxy signature-digest-algorithm-id SHA-512;;
                SHA384*) crudini --set ${local_ini} configuration-proxy signature-digest-algorithm-id SHA-384;;
                SHA256*) crudini --set ${local_ini} configuration-proxy signature-digest-algorithm-id SHA-256;;
                SHA1*) crudini --set ${local_ini} configuration-proxy signature-digest-algorithm-id SHA-1;;
            esac
        fi

        invoke-rc.d --quiet nginx try-restart || true
        invoke-rc.d --quiet xroad-signer try-restart || true

        deb-systemd-invoke stop xroad-confclient
        deb-systemd-invoke disable xroad-confclient
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# check certificates and request necessary subject information from the user
while :; do
    if [[ ! -r /etc/xroad/ssl/confproxy.crt || ! -r /etc/xroad/ssl/confproxy.key ]]; then
        HOST=$(hostname -f)
        if (( ${#HOST} > 64 )); then
          HOST="$(hostname -s)"
        fi
        LIST=
        for i in $(ip addr | grep 'scope global' | tr '/' ' ' | awk '{print $2}'); do LIST+="IP:$i,"; done;
        ALT="${LIST}DNS:$(hostname -f),DNS:$(hostname -s)"

        echo "Generating new confproxy.[crt|key] files "
        db_subst xroad-common/service-subject HOST "$HOST"
        db_subst xroad-common/service-altsubject ALT "$ALT"
        RET=
        db_get xroad-common/service-subject
        if [ -z "$RET" ]; then
            db_set xroad-common/service-subject "/CN=$HOST"
        fi
        RET=
        db_get xroad-common/service-altsubject
        if [ -z "$RET" ]; then
            db_set xroad-common/service-altsubject "$ALT"
        fi
        db_input critical xroad-common/service-subject || true
        db_input critical xroad-common/service-altsubject || true
        db_go
        RET=
        db_get xroad-common/service-subject
        subj="$RET"
        RET=
        db_get xroad-common/service-altsubject
        altn="$RET"
        db_go
        rm -f /etc/xroad/ssl/confproxy.crt //etc/xroad/ssl/confproxy.key
        echo "generating new service TLS key/certificate with $subj and $altn"
        /usr/share/xroad/scripts/generate_certificate.sh -n confproxy -s "${subj}" -a "${altn}" -p 2>/tmp/cert.err || handle_error

        invoke-rc.d --quiet nginx try-restart || true
    fi
done

#DEBHELPER#

exit 0
